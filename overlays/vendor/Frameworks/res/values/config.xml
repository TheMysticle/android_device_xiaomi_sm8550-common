<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2018, The Linux Foundation. All rights reserved.

     Redistribution and use in source and binary forms, with or without
     modification, are permitted (subject to the limitations in the
     disclaimer below) provided that the following conditions are met:

        * Redistributions of source code must retain the above copyright
          notice, this list of conditions and the following disclaimer.
        * Redistributions in binary form must reproduce the above
          copyright notice, this list of conditions and the following
          disclaimer in the documentation and/or other materials provided
          with the distribution.
        * Neither the name of the Linux Foundation nor the names of its
          contributors may be used to endorse or promote products derived
          from this software without specific prior written permission.

     NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE
     GRANTED BY THIS LICENSE.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT
     HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
     WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
     LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
     CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
     SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
     BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
     WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
     OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
     IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<resources>
    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
    on the headphone/microphone jack. When false use the older uevent framework -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- When true decouple the auto-suspend state of the device from the display
    on/off state. -->
    <bool name="config_powerDecoupleAutoSuspendModeFromDisplay">true</bool>

    <!-- Control whether the always on display mode is available. This should only be enabled on
         devices where the display has been tuned to be power efficient in DOZE and/or DOZE_SUSPEND
         states. -->
    <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>

    <!-- Control whether the always on display mode is enabled by default. This value will be used
         during initialization when the setting is still null. -->
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <bool name="config_enableWifiDisplay">true</bool>

    <!-- Whether the device has the standalone (SA) mode of 5G NR enabled.-->
    <bool name="config_telephony5gStandalone">true</bool>
    <!-- Whether the device has the non-standalone (NSA) mode of 5G NR enabled.-->
    <bool name="config_telephony5gNonStandalone">true</bool>

    <!-- Average Current for bluetooth controller when idle. 0 by default-->
    <integer translatable="false" name="config_bluetooth_idle_cur_ma">4</integer>

    <!-- Average Current for bluetooth controller when receiving. 0 by default-->
    <integer translatable="false" name="config_bluetooth_rx_cur_ma">18</integer>

    <!-- Average Current for bluetooth controller when transmitting. 0 by default-->
    <integer translatable="false" name="config_bluetooth_tx_cur_ma">33</integer>

    <!-- Average Current for bluetooth controller. 0 by default-->
    <integer translatable="false" name="config_bluetooth_operating_voltage_mv">4000</integer>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>"/apex/com.android.art/javalib/core-libart.jar"</item>
        <item>"/apex/com.android.art/javalib/core-oj.jar"</item>
        <item>"/system/bin/surfaceflinger"</item>
        <item>"/system/framework/arm64/boot-telephony-common.art"</item>
        <item>"/system/framework/boot-framework.vdex"</item>
        <item>"/system/framework/ext.jar"</item>
        <item>"/system/framework/framework-res.apk"</item>
        <item>"/system/framework/framework.jar"</item>
        <item>"/system/framework/oat/arm64/services.odex"</item>
        <item>"/system/framework/oat/arm64/services.vdex"</item>
        <item>"/system/framework/services.jar"</item>
        <item>"/system/framework/telephony-common.jar"</item>
        <item>"/system/lib64/libEGL.so"</item>
        <item>"/system/lib64/libGLESv1_CM.so"</item>
        <item>"/system/lib64/libGLESv2.so"</item>
        <item>"/system/lib64/libGLESv3.so"</item>
        <item>"/system/lib64/libgui.so"</item>
        <item>"/system/lib64/libhwui.so"</item>
        <item>"/system/lib64/libui.so"</item>
        <item>"/system/lib64/libvulkan.so"</item>
        <item>"/system_ext/priv-app/SystemUIGoogle/SystemUIGoogle.apk"</item>
        <item>"/vendor/lib64/egl/eglSubDriverAndroid.so"</item>
        <item>"/vendor/lib64/egl/libEGL_adreno.so"</item>
        <item>"/vendor/lib64/egl/libGLESv1_CM_adreno.so"</item>
        <item>"/vendor/lib64/egl/libGLESv2_adreno.so"</item>
        <item>"/vendor/lib64/hw/vulkan.adreno.so"</item>
        <item>"/vendor/lib64/libCB.so"</item>
        <item>"/vendor/lib64/libOpenCL.so"</item>
        <item>"/vendor/lib64/libadreno_utils.so"</item>
        <item>"/vendor/lib64/libcamxexternalformatutils.so"</item>
        <item>"/vendor/lib64/libgpudataproducer.so"</item>
        <item>"/vendor/lib64/libgsl.so"</item>
        <item>"/vendor/lib64/libipebpsstriping.so"</item>
        <item>"/vendor/lib64/libllvm-glnext.so"</item>
        <item>"/vendor/lib64/libllvm-qcom.so"</item>
    </string-array>

    <!-- Vibrator pattern for feedback about a long screen/key press. -->
    <integer-array name="config_longPressVibePattern">
        <item>0</item>
        <item>1</item>
        <item>20</item>
        <item>21</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about touching a virtual key. -->
    <integer-array name="config_virtualKeyVibePattern">
        <item>0</item>
        <item>10</item>
        <item>20</item>
        <item>30</item>
    </integer-array>

    <!-- Enables or disables haptic effect when the text insertion/selection handle is moved
         manually by the user. Off by default, since the expected haptic feedback may not be
         available on some devices. -->
    <bool name="config_enableHapticTextHandle">true</bool>

    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap. -->
    <integer-array name="config_keyboardTapVibePattern">
        <item>40</item>
    </integer-array>

    <!-- Safe headphone volume index. When music stream volume is below this index
         the SPL on headphone output is compliant to EN 60950 requirements for portable music
         players. -->
    <integer name="config_safe_media_volume_index">100</integer>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!-- Flag indicating which package name can access the persistent data partition -->
    <string name="config_persistentDataPackageName" translatable="false">com.google.android.gms</string>

    <!-- the number of the max cached processes in the system. -->
    <integer name="config_customizedMaxCachedProcesses">64</integer>

    <!-- Whether to enable Lineage Health Service -->
    <bool name="config_lineageHealthSupported">true</bool>

    <!-- The default refresh rate for a given device. If a non-zero value is set for
         config_defaultPeakRefreshRate, then config_defaultRefreshRate may be set to 0, in that case
         the value set for config_defaultPeakRefreshRate will act as the default peak frame rate -->
    <integer name="config_defaultRefreshRate">0</integer>

    <integer name="config_defaultMinRefreshRate">60</integer>

    <!-- The default peak refresh rate for a given device. Change this value if you want to allow
         for higher refresh rates to be automatically used out of the box -->
    <integer name="config_defaultPeakRefreshRate">120</integer>

</resources>
